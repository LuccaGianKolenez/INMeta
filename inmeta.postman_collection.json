{
  "info": {
    "name": "INMeta API",
    "_postman_id": "f3f2a3d9-7a88-4d8b-9c6c-9f2e3e2f9c11",
    "description": "Coleção para a API de documentação de colaboradores (Express + TypeScript + PostgreSQL).",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:3000/api" },
    { "key": "employeeId", "value": "" },
    { "key": "docTypeId", "value": "" }
  ],
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "GET /health",
          "request": {
            "method": "GET",
            "header": [],
            "url": { "raw": "{{baseUrl}}/health", "host": ["{{baseUrl}}"], "path": ["health"] }
          },
          "event": [
            {
              "listen": "test",
              "script": { "exec": ["pm.test(\"status 200\", () => pm.response.code === 200);"], "type": "text/javascript" }
            }
          ]
        },
        {
          "name": "GET /readyz",
          "request": {
            "method": "GET",
            "header": [],
            "url": { "raw": "{{baseUrl}}/readyz", "host": ["{{baseUrl}}"], "path": ["readyz"] }
          },
          "event": [
            {
              "listen": "test",
              "script": { "exec": ["pm.test(\"status 200\", () => pm.response.code === 200);"], "type": "text/javascript" }
            }
          ]
        }
      ]
    },
    {
      "name": "Document Types",
      "item": [
        {
          "name": "POST /document-types (criar)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{baseUrl}}/document-types", "host": ["{{baseUrl}}"], "path": ["document-types"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"CPF\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"201\", () => pm.response.code === 201);",
                  "const json = pm.response.json();",
                  "pm.expect(json).to.have.property('id');",
                  "// guarda docTypeId como número",
                  "pm.collectionVariables.set('docTypeId', Number(json.id));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "GET /document-types (listar)",
          "request": {
            "method": "GET",
            "url": { "raw": "{{baseUrl}}/document-types", "host": ["{{baseUrl}}"], "path": ["document-types"] }
          },
          "event": [
            {
              "listen": "test",
              "script": { "exec": ["pm.test(\"200\", () => pm.response.code === 200);"], "type": "text/javascript" }
            }
          ]
        }
      ]
    },
    {
      "name": "Employees",
      "item": [
        {
          "name": "POST /employees (criar)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": { "raw": "{{baseUrl}}/employees", "host": ["{{baseUrl}}"], "path": ["employees"] },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Colaborador X\",\n  \"cpf\": \"12345678901\",\n  \"hiredAt\": \"2024-01-01\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"201\", () => pm.response.code === 201);",
                  "const json = pm.response.json();",
                  "pm.expect(json).to.have.property('id');",
                  "pm.collectionVariables.set('employeeId', Number(json.id));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "PUT /employees/:id (atualizar)",
          "request": {
            "method": "PUT",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/employees/{{employeeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["employees", "{{employeeId}}"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Colaborador X Atualizado\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": { "exec": ["pm.test(\"200\", () => pm.response.code === 200);"], "type": "text/javascript" }
            }
          ]
        },
        {
          "name": "POST /employees/:id/required-docs (vincular/ desvincular)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/employees/{{employeeId}}/required-docs",
              "host": ["{{baseUrl}}"],
              "path": ["employees", "{{employeeId}}", "required-docs"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"add\": [ {{docTypeId}} ]\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"200\", () => pm.response.code === 200);",
                  "const json = pm.response.json();",
                  "pm.expect(json).to.have.property('pending');"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "GET /employees/:id/status",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/employees/{{employeeId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["employees", "{{employeeId}}", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"200\", () => pm.response.code === 200);",
                  "const json = pm.response.json();",
                  "pm.expect(json).to.have.keys(['employeeId','sent','pending']);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Documents",
      "item": [
        {
          "name": "POST /employees/:id/documents (enviar)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/employees/{{employeeId}}/documents",
              "host": ["{{baseUrl}}"],
              "path": ["employees", "{{employeeId}}", "documents"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentTypeId\": {{docTypeId}},\n  \"name\": \"cpf_frente.pdf\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"201\", () => pm.response.code === 201);",
                  "pm.test(\"mensagem\", () => pm.response.json().message === 'Document sent');"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "POST /employees/:id/documents (reenviar - 409 esperado)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": {
              "raw": "{{baseUrl}}/employees/{{employeeId}}/documents",
              "host": ["{{baseUrl}}"],
              "path": ["employees", "{{employeeId}}", "documents"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"documentTypeId\": {{docTypeId}},\n  \"name\": \"cpf_outra_foto.pdf\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"409\", () => pm.response.code === 409);",
                  "pm.test(\"erro já enviado\", () => pm.response.json().error);"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "GET /documents/pending (listar)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/documents/pending?page=1&pageSize=10",
              "host": ["{{baseUrl}}"],
              "path": ["documents", "pending"],
              "query": [
                { "key": "page", "value": "1" },
                { "key": "pageSize", "value": "10" }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"200\", () => pm.response.code === 200);",
                  "pm.test(\"X-Total-Count presente\", () => pm.response.headers.has('X-Total-Count'));",
                  "const json = pm.response.json();",
                  "pm.expect(json).to.have.property('items');",
                  "pm.expect(json).to.have.property('total');"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "GET /documents/pending (filtrar por employeeId/docTypeId)",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/documents/pending?page=1&pageSize=10&employeeId={{employeeId}}&documentTypeId={{docTypeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["documents", "pending"],
              "query": [
                { "key": "page", "value": "1" },
                { "key": "pageSize", "value": "10" },
                { "key": "employeeId", "value": "{{employeeId}}" },
                { "key": "documentTypeId", "value": "{{docTypeId}}" }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"200\", () => pm.response.code === 200);",
                  "pm.test(\"X-Total-Count presente\", () => pm.response.headers.has('X-Total-Count'));"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}
